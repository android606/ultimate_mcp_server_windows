name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Load environment files
      run: |
        # Load main environment file
        if [ -f .github/.env ]; then
          echo "Loading .github/.env"
          while IFS= read -r line || [ -n "$line" ]; do
            # Skip comments and empty lines
            if [[ $line =~ ^[^#]*= ]] && [[ -n $line ]]; then
              # Extract key and value
              key=$(echo "$line" | cut -d'=' -f1)
              value=$(echo "$line" | cut -d'=' -f2-)
              # Only set if not already set (allows GitHub secrets to take precedence)
              if [ -z "${!key}" ]; then
                echo "$key=$value" >> $GITHUB_ENV
              fi
            fi
          done < .github/.env
        fi
        
        # Load secrets file if it exists
        if [ -f .github/.env.secrets ]; then
          echo "Loading .github/.env.secrets"
          while IFS= read -r line || [ -n "$line" ]; do
            # Skip comments and empty lines
            if [[ $line =~ ^[^#]*= ]] && [[ -n $line ]]; then
              # Extract key and value
              key=$(echo "$line" | cut -d'=' -f1)
              value=$(echo "$line" | cut -d'=' -f2-)
              # Only set if not already set (allows GitHub secrets to take precedence)
              if [ -z "${!key}" ]; then
                echo "$key=$value" >> $GITHUB_ENV
              fi
            fi
          done < .github/.env.secrets
        fi
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test]"
        
    - name: Create cache directory
      run: mkdir -p .github/cache
        
    - name: Run tests
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        MARQO_API_KEY: ${{ secrets.MARQO_API_KEY }}
        # Test-specific overrides
        MCP_SERVER_HOST: localhost
        MCP_SERVER_PORT: 8024  # Use test port to avoid conflicts
        MCP_DEBUG: true
        MCP_LOG_LEVEL: DEBUG
        PYTEST_TIMEOUT: 30
        TEST_SERVER_PORT: 8024
        RELOAD_ON_CHANGE: false
        WATCH_FOR_CHANGES: false
        ENABLE_DISK_CACHE: true
        CACHE_DIR: .github/cache
      run: |
        pytest tests/ -v 